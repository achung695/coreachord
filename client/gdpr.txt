Q: If you are collecting user data, how do you inform your customers why you’re processing their data? Do you have mechanisms in place for users to deny consent of data processing?

The only user data that we are currently planning to collect are emails and passwords, for login authentication, so that users can create accounts and save their generated chord progressions.
In our app, we make it clear that by submitting their emails and passwords, these data are only used to allow users to save and retrieve their generated chord progressions.
However, there is an option for users to opt out of any data being collected on them. A user could choose to continue using the service as a “guest,” choosing not to make an account — in which case, they will not be able to save chord progressions.


Q: If you are not directly processing user data, what data are you processing and why? Are your data processing techniques made clear to your users? How?

We are generating chord progressions using a handmade probability matrix. The chord progressions generated by a user will then be stored and retrieved, but not further processed.


Q: What data processing do you do, and how would you ensure that it is done safely, if you don’t already? How would you secure your project against possible malfunctions/crashes?

Firebase hides user passwords in its database for authentication. When accessing the database manually for all accounts registered in the Firebase project, even we aren’t actually able to view the passwords, only the emails.
For additional security, Firebase has built-in security rules that we can specify, including access control and data validation.


Q: Let’s say that your database is compromised - what is the worst case scenario for your app? Your users? How do you protect against a breach? What steps have you taken to ensure that the data you’re storing in your database is protected? This could include protecting your inputs to avoid injection attacks, encrypting user data to avoid password leaks, etc.

Firebase will hopefully protect everything for us—they have far more experience with data security than we have. However, even if the database were compromised, the worst case scenario for us is that the attacker would get the information about registered users and the users’ generated chord progression data could be lost. Because the only identifying information is users’ email addresses, this is unfortunate but not catastrophic. The attacker could corrupt our database, so to protect against a breach, we would encrypt our stored user data with different encryption techniques.
The worst case scenario for users is if they have used the same email/password combination to sign up for services other than ours, in which case the security of their other accounts may be compromised by an attacker gaining access to email/password data from our database. However, there is little that we can do to ensure that our users practice proper password security.
